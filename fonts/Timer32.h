/*
 *
 * Timer.h
 *
 * written by K. Nyk√§nen
 *
 * k_nykanen@hotmail.com
 *
 * File Name           : Timer.h
 * Date                : 11.03.2019
 * Font size in bytes  : 23777
 * Font width          : 14
 * Font height         : 32
 *
 * The font data are defined as
 *
 * struct _FONT_ {
 *     uint16_t   font_Size_in_Bytes_over_all_included_Size_it_self;
 *     uint8_t    font_Width_in_Pixel_for_fixed_drawing;
 *     uint8_t    font_Height_in_Pixel_for_all_characters;
 *     unit8_t    font_First_Char;
 *     uint8_t    font_Char_Count;
 *
 *     uint8_t    font_Char_Widths[font_Last_Char - font_First_Char +1];
 *                  // for each character the separate width in pixels,
 *                  // characters < 128 have an implicit virtual right empty row
 *
 *     uint8_t    font_data[];
 *                  // bit field of all characters
 */

#include <inttypes.h>
#include <avr/pgmspace.h>

#ifndef TIMER32_H
#define TIMER32_H

const static uint8_t Timer32[] PROGMEM = { // the name here 'Timer' must be used to refer to this font
                                            // 'PROGMEM' forces the data into programme space to save RAM
    0x00, 0x00, // size     0 here indicates a fixed width font
    0x0E, // width          these are 32 pixels wide (a full DMD)
    0x20, // height         max height of the characters = 16 (a full DMD)
    0x30, // first char     hex value of the first character ('1')
    0x0A, // char count     the number of characters in this font

    // font data

0xE0, 0xF8, 0xFC, 0x3E, 0x1E, 0x0E, 0x0E, 0x0E, 0x0E, 0x1E, 0x3E, 0xFC, 0xF8, 0xE0,0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF,0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF,0x0F, 0x1F, 0x3F, 0x7C, 0x78, 0x70, 0x70, 0x70, 0x70, 0x78, 0x7C, 0x3F, 0x1F, 0x0F, // 0
0x00, 0x00, 0xE0, 0xF0, 0x78, 0x3C, 0xFE, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x7F, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, // 1
0xE0, 0xF8, 0xFC, 0x3C, 0x1E, 0x0E, 0x0E, 0x0E, 0x0E, 0x1E, 0x3C, 0xFC, 0xF8, 0xE0,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xFF, 0xFF, 0x3F,0x00, 0x80, 0xC0, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x03, 0x01, 0x00, 0x00,0x7F, 0x7F, 0x7F, 0x71, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, // 2
0xE0, 0xF8, 0xFC, 0x3E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x3E, 0xFC, 0xF8, 0xE0,0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xE0, 0xFF, 0xFF, 0x7F,0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, 0xFF, 0xFF, 0xFE,0x07, 0x1F, 0x3F, 0x7C, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x7C, 0x3F, 0x1F, 0x07, // 3
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF8, 0xFE, 0xFE, 0xFE,0x00, 0x00, 0x00, 0x00, 0xC0, 0xF0, 0xFC, 0x3F, 0x0F, 0x03, 0x00, 0xFF, 0xFF, 0xFF,0x40, 0x70, 0x7C, 0x7F, 0x7F, 0x73, 0x70, 0x70, 0x70, 0x70, 0x70, 0xFF, 0xFF, 0xFF,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x7F, 0x7F, // 4
0xFE, 0xFE, 0xFE, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E,0xFF, 0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,0x81, 0x81, 0x81, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xFF, 0xFF, 0xFF,0x07, 0x1F, 0x3F, 0x7C, 0x78, 0x70, 0x70, 0x70, 0x70, 0x78, 0x3C, 0x3F, 0x1F, 0x07, // 5
0xE0, 0xF8, 0xFC, 0x7E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x7E, 0xFC, 0xF8, 0xE0,0xFF, 0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xC1, 0xC1, 0x01,0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x03, 0xFF, 0xFF, 0xFF,0x07, 0x1F, 0x3F, 0x78, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x78, 0x3F, 0x1F, 0x07, // 6
0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0xFE, 0xFE, 0xFE,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF8, 0x7E, 0x1F, 0x07, 0x01,0x00, 0x00, 0x00, 0x80, 0xE0, 0xF8, 0x7E, 0x1F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00,0x60, 0x78, 0x7E, 0x1F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 7
0xE0, 0xF8, 0xFC, 0x3C, 0x1E, 0x0E, 0x0E, 0x0E, 0x0E, 0x1E, 0x3C, 0xFC, 0xF8, 0xE0,0x7F, 0xFF, 0xFF, 0xE0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xE0, 0xFF, 0xFF, 0x7F,0xFF, 0xFF, 0xFF, 0x03, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x03, 0xFF, 0xFF, 0xFF,0x07, 0x1F, 0x3F, 0x3C, 0x78, 0x70, 0x70, 0x70, 0x70, 0x78, 0x3C, 0x3F, 0x1F, 0x07, // 8
0xE0, 0xF8, 0xFC, 0x3C, 0x1E, 0x0E, 0x0E, 0x0E, 0x0E, 0x1E, 0x3C, 0xFC, 0xF8, 0xE0,0x3F, 0xFF, 0xFF, 0xE0, 0xC0, 0x80, 0x80, 0x80, 0x80, 0xC0, 0xE0, 0xFF, 0xFF, 0xFF,0xC0, 0xC0, 0xC1, 0x01, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0xFF, 0xFF, 0xFF,0x07, 0x1F, 0x3F, 0x3E, 0x78, 0x70, 0x70, 0x70, 0x70, 0x78, 0x3E, 0x3F, 0x1F, 0x07 // 9




};

#endif